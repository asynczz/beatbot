import telebot
from keyboa import Keyboa #Keyboa
import os
import config
import make_beat
import db_handler

bot = telebot.TeleBot(config.TOKEN)

@bot.message_handler(commands=['start'])
def welcome(message):
    inline_markup = Keyboa(items=config.menu_buttons, items_in_row=2)
    bot.send_message(message.chat.id, '–ó–¥–∞—Ä–æ–≤–∞, –±–æ—Ç', reply_markup=inline_markup())

    db_handler.add_user(message.chat.username, message.chat.id, config.start_balance)

@bot.message_handler(commands=['menu'])
def welcome(message):
    inline_markup = Keyboa(items=config.menu_buttons, items_in_row=2)
    bot.send_message(message.chat.id, '–ú–µ–Ω—é:', reply_markup=inline_markup())

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –º–µ–Ω—é
@bot.callback_query_handler(func=lambda call: call.data in config.menu_buttons)
def menu(call):
    global msg
    try:
        if call.message:
            if call.data == f'–ó–∞–∫–∞–∑–∞—Ç—å –±–∏—Ç - {config.beat_price}‚ÇΩ':
                styles_markup = Keyboa(items=config.styles_markup, items_in_row=2)
                msg = bot.send_message(call.message.chat.id, '–í—ã–±–µ—Ä–∏ —Å—Ç–∏–ª—å –±–∏—Ç–∞:', reply_markup=styles_markup())
            elif call.data == '–ë–∞–ª–∞–Ω—Å':
                balance_markup = Keyboa(items=config.balance_buttons, items_in_row=3)
                balance = db_handler.get_balance(call.message.chat.id)
                if balance == 0:
                    msg = bot.send_message(call.message.chat.id, f'–ù–∞ —Ç–≤–æ–µ–º –±–∞–ª–∞–Ω—Å–µ {balance}‚ÇΩ\n\n‚ö†Ô∏è–ó–∞—á–∏—Å–ª–µ–Ω–Ω—ã–µ –¥–µ–Ω—å–≥–∏ –±—É–¥—É—Ç –ª–µ–∂–∞—Ç—å –Ω–∞ –±–∞–ª–∞–Ω—Å–µ —Å–∫–æ–ª—å–∫–æ —É–≥–æ–¥–Ω–æ, –Ω–∞ –Ω–∏—Ö –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –º–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å –±–∏—Ç!', reply_markup=balance_markup())
                else:
                    msg = bot.send_message(call.message.chat.id, f'–ù–∞ —Ç–≤–æ–µ–º –±–∞–ª–∞–Ω—Å–µ {balance}—Ä—É–±', reply_markup=balance_markup())
            elif call.data == '–û –Ω–∞—Å':
                navigation_markup = Keyboa(items=config.navigation_buttons, items_in_row=2)
                bot.send_message(call.message.chat.id, '–û –Ω–∞—Å –º–Ω–æ–≥–æ –Ω–µ —Å–∫–∞–∂–µ—à—å.')
    except Exception as e:
        print(repr(e))

@bot.callback_query_handler(func=lambda call: call.data in config.balance_buttons)
def balance(call):
    global msg
    try:
        if call.message:
            if call.data == '–°–≤–æ—è —Å—É–º–º–∞':
                bot.delete_message(call.message.chat.id, msg.message_id)
                msg = bot.send_message(call.message.chat.id, f'‚ö†Ô∏è–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞‚ö†Ô∏è') 
            else:
                bot.delete_message(call.message.chat.id, msg.message_id)
                db_handler.top_balance(call.message.chat.id, call.data.split('‚ÇΩ')[0])
                msg = bot.send_message(call.message.chat.id, f'–¢–≤–æ–π –±–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ {call.data}') 

    except Exception as e:
        print(repr(e))

# user_id: call.data(style)
user_chosen_style = {}

@bot.callback_query_handler(func=lambda call: call.data in config.styles_markup)
def temp(call):
    global msg
    try:
        if call.message:
            bot.delete_message(call.message.chat.id, msg.message_id)
            bpm_markup = Keyboa(items=config.bpm_buttons, items_in_row=3)
            msg = bot.send_message(call.message.chat.id, f'{call.data} - –æ—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä! –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ —Ç–µ–º–ø:', reply_markup=bpm_markup()) 
            user_chosen_style[call.message.chat.id] = call.data

    except Exception as e:
        print(repr(e))

@bot.callback_query_handler(func=lambda call: call.data in config.bpm_buttons)
def style(call):
    global msg
    try:
        if call.message:

            bot.delete_message(call.message.chat.id, msg.message_id)

            if db_handler.get_balance(call.message.chat.id) >= config.beat_price:
                msg = bot.send_message(call.message.chat.id, '–î–µ–ª–∞—é –±–∏—Ç...')

                # –°–¥–µ–ª–∞—Ç—å –±–∏—Ç
                if user_chosen_style[call.message.chat.id] == 'Jersey Club':
                    make_beat.jersey_club(call.message.chat.id, call.data)

                elif user_chosen_style[call.message.chat.id] == 'Trap':
                    make_beat.trap(call.message.chat.id, call.data)

                elif user_chosen_style[call.message.chat.id] == 'Drill':
                    make_beat.drill(call.message.chat.id, call.data)

                elif user_chosen_style[call.message.chat.id] == 'Plug':
                    make_beat.plug(call.message.chat.id, call.data)

                # –£–¥–∞–ª–∏—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                bot.delete_message(call.message.chat.id, msg.message_id)

                # –û—Ç–ø—Ä–∞–≤–∏—Ç—å –±–∏—Ç
                msg = bot.send_message(call.message.chat.id, f'–ó–∞–±–∏—Ä–∞–π —Å–≤–æ–π –±–∏—Ç\n–≤ —Å—Ç–∏–ª–µ: {user_chosen_style[call.message.chat.id]}\n—Å —Ç–µ–º–ø–æ–º: {call.data}\n\n–° —Ç–≤–æ–µ–≥–æ –±–∞–ª–∞–Ω—Å–∞ —Å–Ω—è—Ç–æ {config.beat_price}‚ÇΩ\n\n–ë–∏—Ç –±—É–¥–µ—Ç —Ç—É—Ç üëá')
                del user_chosen_style[call.message.chat.id]

                # –û—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª
                beat = open(f'output_beats/{call.message.chat.id}.wav', 'rb')

                # –°–∫–∏–Ω—É—Ç—å —Ñ–∞–π–ª
                bot.send_audio(call.message.chat.id, beat) 

                db_handler.pay(call.message.chat.id, config.beat_price)

                # –ó–∞–∫—Ä—ã—Ç—å —Ñ–∞–π–ª
                beat.close()

                # –£–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª
                os.remove(f'output_beats/{call.message.chat.id}.wav')

            else:    
                inline_markup = Keyboa(items=config.menu_buttons[0], items_in_row=1)
                bot.send_message(call.message.chat.id, f'–¢–µ–±–µ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–µ–Ω–µ–≥ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ, –ø–æ–ø–æ–ª–Ω–∏ –±–∞–ª–∞–Ω—Å —á—Ç–æ–±—ã –∫—É–ø–∏—Ç—å –±–∏—Ç.', reply_markup=inline_markup())
    except Exception as e:
        print(repr(e))
        bot.delete_message(call.message.chat.id, msg.message_id)
        bot.send_message(call.message.chat.id, '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –±–∏—Ç, –¥–µ–Ω—å–≥–∏ –∑–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –Ω–µ —Å–Ω—è—Ç—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.')

bot.infinity_polling()