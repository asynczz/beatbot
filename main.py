import logging
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.types import CallbackQuery
from aiogram.utils.callback_data import CallbackData

# –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –≤—ã–±–æ—Ä–∫–∏ –ø—É—Ç–µ–π –∫ —Ñ–∞–π–ª–∞–º
from glob import glob
# –§–∞–π–ª –¥–∞–Ω–Ω—ã—Ö
import config
# –§–∞–π–ª –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
import launch
# –§–∞–π–ª –æ–≤–µ—Ä–ª–µ–µ–≤ –±–∏—Ç–æ–≤
# import make_beat
# –§–∞–π–ª –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ –ë–î
import db_handler
# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
import keyboards
# –î–ª—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞
from yookassa import Configuration,Payment 

import itertools
from os import remove
import json

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —É—Ä–æ–≤–Ω—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=config.TOKEN)
dp = Dispatcher(bot)

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –Æ–∫–∞—Å—Å—ã
Configuration.account_id = config.SHOP_ID
Configuration.secret_key = config.SHOP_API_TOKEN

# –¶–µ–Ω–∞ –±–∏—Ç–∞
beat_price = config.beat_price # RUB

# –ù–∞—á–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ –ë–î
start_balance = config.start_balance # RUB

# –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∏—Ç–æ–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è
beats = config.beats

# –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –∑–∞–ø—É—Å–∫
async def safe_launch():
    if launch.mailing_list is not None:
        try:
            for chat_id in launch.mailing_list:
                beat_keyboard = InlineKeyboardMarkup().add(keyboards.btn_generate_beat)
                await bot.send_message(chat_id, '–°–æ–∂–∞–ª–µ—é, –Ω–æ –≤–æ –≤—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–≤–æ–∏—Ö –±–∏—Ç–æ–≤ –±–æ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏–ª—Å—è üòµ‚Äçüí´\n\n–≠—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –æ—á–µ–Ω—å —Ä–µ–¥–∫–æ, –Ω–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞. –î–µ–Ω—å–≥–∏ –∑–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –Ω–µ —Å–Ω—è—Ç—ã.\n\n–¢—ã –º–æ–∂–µ—à—å –∑–∞–∫–∞–∑–∞—Ç—å –±–∏—Ç –µ—â–µ —Ä–∞–∑ üëâ', reply_markup=beat_keyboard)         
            for chat_id in launch.chat_ids_by_messages_to_del_ids:
                messages_ids = db_handler.get_beats_versions_messages_ids(chat_id).split(', ')
                for mes_id in messages_ids:
                    await bot.delete_message(chat_id, mes_id)
                db_handler.del_beats_versions_messages_ids(chat_id)
        except:
            db_handler.del_beats_versions_messages_ids(chat_id)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message_handler(commands=['start'])
async def send_hello(message: types.Message):
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    await bot.send_message(message.chat.id, text='–ü—Ä–∏–≤–µ—Ç! üëã\n\n–Ø —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ —Å–æ–∑–¥–∞—Ç—å –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ üéß –±–∏—Ç—ã –≤ —Ä–∞–∑–Ω—ã—Ö —Å—Ç–∏–ª—è—Ö.\n\n–ú–æ—è –≥–ª–∞–≤–Ω–∞—è –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å - –¥–æ—Å—Ç—É–ø–Ω–∞—è üí∞ —Ü–µ–Ω–∞ –∏ –±–æ–ª—å—à–æ–π –≤—ã–±–æ—Ä —Å—Ç–∏–ª–µ–π. –¢—ã –º–æ–∂–µ—à—å –≤—ã–±—Ä–∞—Ç—å –ª—é–±–æ–π —Å—Ç–∏–ª—å, –∫–æ—Ç–æ—Ä—ã–π —Ç–µ–±–µ –Ω—Ä–∞–≤–∏—Ç—Å—è, –∏ —è —Å–æ–∑–¥–∞–º –¥–ª—è —Ç–µ–±—è —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –±–∏—Ç.\n\n–ù–µ —É–ø—É—Å—Ç–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–æ–∑–¥–∞—Ç—å —Å–≤–æ–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –∑–≤—É–∫ –∏ –≤—ã–¥–µ–ª–∏—Ç—å—Å—è –Ω–∞ —Ñ–æ–Ω–µ –¥—Ä—É–≥–∏—Ö –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π! üé∂\n\n–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –∏—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É\n/menu')
# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /menu
@dp.message_handler(commands=['menu'])
async def menu(message: types.Message):
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è

    await bot.send_message(message.chat.id, text="üé∂ –≠—Ç–æ –º–µ–Ω—é –∑–∞–∫–∞–∑–∞ –±–∏—Ç–æ–≤ üé∂\n\n–û—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ –±–æ—Ç–∞ - –ø–∏—Å–∞—Ç—å –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –±–∏—Ç—ã –∑–∞ –¥–æ—Å—Ç—É–ø–Ω—É—é —Ü–µ–Ω—É, –æ—Ç–ø—Ä–∞–≤—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É –≤ —á–∞—Ç, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–∏–º–µ—Ä—ã –±–∏—Ç–æ–≤, —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –±–æ—Ç–æ–º üëâ\n/example_beats.\n\nüéµ –ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É '–ó–∞–∫–∞–∑–∞—Ç—å –±–∏—Ç' –∏ –≤—ã–±–µ—Ä–∏ —Å—Ç–∏–ª—å\n\nüëâ –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –Ω–∞–∂–º–∏ –Ω–∞ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –Ω–∏–∂–µ:", reply_markup=keyboards.menu_keyboard)
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –ë–î
    # –ò–º—è –∏ —Ñ–∞–º–∏–ª–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_initials = f'{message.from_user.first_name} {message.from_user.last_name}'
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω —Ç–æ –ø–æ–≤—Ç–æ—Ä–Ω–∞—è –∑–∞–ø–∏—Å—å –Ω–µ –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç
    db_handler.add_user(message.chat.username, message.chat.id, user_initials, start_balance)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /example_beats
got_example_beats = {}
@dp.message_handler(commands=['example_beats'])
async def menu(message: types.Message):
    
    if db_handler.get_beats_generating(message.chat.id) == 0:
        if got_example_beats.get(message.chat.id) is None:
            # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
            await bot.send_message(message.chat.id, "–ö–æ–Ω–µ—á–Ω–æ! –í–æ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–∏–º–µ—Ä–æ–≤ –≥–æ—Ç–æ–≤—ã—Ö –±–∏—Ç–æ–≤ üíæ\n–ù–µ —Å–æ–º–Ω–µ–≤–∞–π—Å—è, –±–æ—Ç —Å–¥–µ–ª–∞–µ—Ç —Ç–∞–∫–∏–µ –∂–µ –∏ —Ç–µ–±–µ!")
            for file_path in glob('example_beats/*.wav'):
                example_beat = open(file_path, 'rb')
                # –û—Ç–ø—Ä–∞–≤–∫–∞ –∞—É–¥–∏–æ
                await bot.send_audio(message.chat.id, example_beat)
                example_beat.close()
            got_example_beats[message.chat.id] = True
        else:
            # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
            beat_keyboard = InlineKeyboardMarkup().add(keyboards.btn_generate_beat)
            await bot.send_message(message.chat.id, "–¢–µ–±–µ —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –ø—Ä–∏–º–µ—Ä—ã –±–∏—Ç–æ–≤ üòµ‚Äçüí´\n\n–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –µ—â—ë, –±–æ—Ç –º–æ–∂–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–±–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –±–∏—Ç üòâ", reply_markup=beat_keyboard)
    else:
        # –û—Ç–ø—Ä–∞–≤–∫–∞ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è
        pass

## –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞

@dp.message_handler()
async def echo(message: types.Message):
    await bot.send_message(message.chat.id, '–Ø –Ω–µ –≤–æ—Å–ø—Ä–∏–Ω–∏–º–∞—é —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã\n\n–í—ã–∑–≤–∞—Ç—å –º–µ–Ω—é –º–æ–∂–Ω–æ –ø–æ –∫–æ–º–∞–Ω–¥–µ /menu –∏–ª–∏ –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –≤ –Ω–∏–∂–Ω–µ–º –ª–µ–≤–æ–º —É–≥–ª—É —ç–∫—Ä–∞–Ω–∞.')


## –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
async def get_user(chat_id):
    if db_handler.get_user(chat_id) == False:
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
        await bot.send_message(chat_id, '–ù—É–∂–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start')
        return False
    else:
        return True

async def reset_chosen_params(chat_id: int) -> None:
    db_handler.del_chosen_bpm(chat_id)
    db_handler.del_chosen_style(chat_id)

@dp.callback_query_handler(lambda c: c.data in keyboards.STYLES_BUTTON)
async def return_to_styles(c: types.CallbackQuery):
    chat_id = c.message.chat.id
    if await get_user(chat_id):
        # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ beats_generating
        if db_handler.get_beats_generating(chat_id) == 0:
            # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ processing
            if db_handler.get_processing(chat_id) == 0:
                # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å processing –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                db_handler.set_processing(chat_id)

                # –û–±–Ω—É–ª–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –±–∏—Ç–∞
                await reset_chosen_params(chat_id)
                
                # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
                await bot.edit_message_text(chat_id=chat_id, message_id=c.message.message_id, text='üéµ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –±–∏—Ç–∞ üéµ\n\nüî• –í—ã–±–µ—Ä–∏ —Å—Ç–∏–ª—å, –≤ –∫–æ—Ç–æ—Ä–æ–º —è —Å–≥–µ–Ω–µ—Ä–∏—Ä—É—é –±–∏—Ç:', reply_markup=keyboards.styles_keyboard)
                
                # –£–¥–∞–ª–∏—Ç—å processing –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                db_handler.del_processing(chat_id)
        else:
            # –û—Ç–ø—Ä–∞–≤–∫–∞ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è
            await bot.answer_callback_query(callback_query_id=c.id, text='‚ö†Ô∏è –¢—ã –Ω–µ –º–æ–∂–µ—à—å –∑–∞–∫–∞–∑–∞—Ç—å –µ—â–µ –æ–¥–∏–Ω –±–∏—Ç –≤–æ –≤—Ä–µ–º—è –æ—Å—É—â–µ—Å—Ç–≤–ª–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –∑–∞–∫–∞–∑–∞.', show_alert=True)

@dp.callback_query_handler(lambda c: c.data in keyboards.UNDO_BUTTON or c.data in keyboards.MENU_BUTTON)
async def return_to_menu(c: types.CallbackQuery):
    chat_id = c.message.chat.id
    if await get_user(chat_id):
        # –û–±–Ω—É–ª–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –±–∏—Ç–∞
        await reset_chosen_params(chat_id)
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
        await bot.edit_message_text(chat_id=chat_id, message_id=c.message.message_id, text="üé∂ –≠—Ç–æ –º–µ–Ω—é –∑–∞–∫–∞–∑–∞ –±–∏—Ç–æ–≤ üé∂\n\n–û—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ –±–æ—Ç–∞ - –ø–∏—Å–∞—Ç—å –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –±–∏—Ç—ã –∑–∞ –¥–æ—Å—Ç—É–ø–Ω—É—é —Ü–µ–Ω—É, –æ—Ç–ø—Ä–∞–≤—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É –≤ —á–∞—Ç, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–∏–º–µ—Ä—ã –±–∏—Ç–æ–≤, —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –±–æ—Ç–æ–º üëâ\n/example_beats.\n\nüéµ –ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É '–ó–∞–∫–∞–∑–∞—Ç—å –±–∏—Ç' –∏ –≤—ã–±–µ—Ä–∏ —Å—Ç–∏–ª—å\n\nüëâ –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –Ω–∞–∂–º–∏ –Ω–∞ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –Ω–∏–∂–µ:", reply_markup=keyboards.menu_keyboard)

@dp.callback_query_handler(lambda c: c.data in keyboards.MENU_BUTTONS)
async def show_menu(c: types.CallbackQuery):
    try:  
        chat_id = c.message.chat.id
        pressed_button = c.data

        if await get_user(chat_id):
            if pressed_button == keyboards.BUTTON_GENERATE_BEAT:
                # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ beats_generating
                if db_handler.get_beats_generating(chat_id) == 0:
                    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ processing
                    if db_handler.get_processing(chat_id) == 0:
                        # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å processing –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                        db_handler.set_processing(chat_id)

                        # –û–±–Ω—É–ª–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –±–∏—Ç–∞
                        await reset_chosen_params(c.message.chat.id)

                        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
                        await bot.edit_message_text(chat_id=chat_id, message_id=c.message.message_id, text='üéµ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –±–∏—Ç–∞ üéµ\n\nüî• –í—ã–±–µ—Ä–∏ —Å—Ç–∏–ª—å, –≤ –∫–æ—Ç–æ—Ä–æ–º —è —Å–≥–µ–Ω–µ—Ä–∏—Ä—É—é –±–∏—Ç:', reply_markup=keyboards.styles_keyboard)
                        
                        # –£–¥–∞–ª–∏—Ç—å processing –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                        db_handler.del_processing(chat_id)
                else:
                    # –û—Ç–ø—Ä–∞–≤–∫–∞ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è
                    await bot.answer_callback_query(callback_query_id=c.id, text='–¢—ã –Ω–µ –º–æ–∂–µ—à—å –∑–∞–∫–∞–∑–∞—Ç—å –µ—â–µ –æ–¥–∏–Ω –±–∏—Ç –≤–æ –≤—Ä–µ–º—è –æ—Å—É—â–µ—Å—Ç–≤–ª–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –∑–∞–∫–∞–∑–∞.', show_alert=True)

            elif pressed_button == keyboards.BUTTON_BALANCE:
                # –ó–∞–ø—Ä–æ—Å –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–∞–±–ª–∏—Ü–µ users
                balance = db_handler.get_balance(chat_id)
                # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
                await bot.edit_message_text(chat_id=c.message.chat.id, message_id=c.message.message_id, text=f'üí∞ –ë–∞–ª–∞–Ω—Å\n\n–ù–∞ —Ç–≤–æ–µ–º –±–∞–ª–∞–Ω—Å–µ: *{balance}‚ÇΩ*\n\nüëâ –í—ã–±–µ—Ä–∏ —Å—É–º–º—É –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è:', reply_markup=keyboards.balance_keyboard, parse_mode='Markdown')

            elif pressed_button == keyboards.BUTTON_ABOUT:
                # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
                await bot.edit_message_text(chat_id=c.message.chat.id, message_id=c.message.message_id, text=f'üè° –û –Ω–∞—Å\n\nüìå –£—Å–ª—É–≥—É –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç:\n\nüë§ –ò–ù–ù: 910821614530\n\n‚úâÔ∏è–ü–æ—á—Ç–∞ –¥–ª—è —Å–≤—è–∑–∏:\ntech.beatbot@mail.ru\n\nüåç–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç:\nhttps://beatmaker.site', reply_markup=keyboards.undo_keyboard)
            
    except Exception as e:
        print(repr(e))
        # –£–¥–∞–ª–∏—Ç—å processing –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        db_handler.set_processing(c.message.chat.id)

# –°–æ–∑–¥–∞–µ—Ç –ø–ª–∞—Ç—ë–∂
async def payment(value,description):
	payment = Payment.create({
    "amount": {
        "value": value,
        "currency": "RUB"
    },
    "payment_method_data": {
        "type": "bank_card"
    },
    "confirmation": {
        "type": "redirect",
        "return_url": "https://web.telegram.org/k/#@NeuralBeatBot"
    },
    "capture": True,
    "description": description
	})

	return json.loads(payment.json())

# –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç –Ω–∞–ª–∏—á–∏–µ "—Ç–æ–≤–∞—Ä–∞"
@dp.pre_checkout_query_handler()
async def process_pre_checkout_query(pre_checkout_query: types.PreCheckoutQuery):
    await bot.answer_pre_checkout_query(pre_checkout_query.id, ok=True)


# –ü–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ —Å–æ–∑–¥–∞–µ—Ç—Å—è –ø–∞—Ä–∞ –∫–ª—é—á –∑–Ω–∞—á–µ–Ω–∏–µ user: value.
# –≠—Ç–æ —Å–¥–µ–ª–∞–Ω–æ –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –Ω–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –ª–∏—à–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –∏ –Ω–µ –∑–∞–ø—É—Å–∫–∞—Ç—å –ª–∏—à–Ω–∏–µ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏, –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ —Ä–µ—Å—É—Ä—Å–æ–≤
users_payment_transactions = {}

# –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞—Ç–µ–∂–∞
async def check_payment(payment_id, c):
    payment = json.loads((Payment.find_one(payment_id)).json())
    
    db_handler.set_payment_checking(c.message.chat.id)

    # –£–¥–∞–ª–µ–Ω–∏–µ –ø–∞—Ä—ã –∫–ª—é—á –∑–Ω–∞—á–µ–Ω–∏–µ user: value.
    def del_user_payment_transactions(chat_id, value):
        users_payment_transactions[chat_id].remove(value)

    while payment['status'] == 'pending':
        payment = json.loads((Payment.find_one(payment_id)).json())
        await asyncio.sleep(3)

    if payment['status']=='succeeded':
        print("SUCCSESS RETURN")
        db_handler.top_balance(c.message.chat.id, c.data.split('‚ÇΩ')[0])
        
        await bot.send_message(c.message.chat.id, f'üíµ –¢–≤–æ–π –±–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ {c.data}', reply_markup=keyboards.to_menu_keyboard)
        # –£–¥–∞–ª–∏—Ç—å payment_checking –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        db_handler.del_payment_checking(c.message.chat.id)

        del_user_payment_transactions(c.message.chat.id, c.data)
        return True
    else:
        print("BAD RETURN")
        # await bot.send_message(c.message.chat.id, '–í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –Ω–∞ –æ–ø–ª–∞—Ç—É –ø–æ —Å—Å—ã–ª–∫–µ –∏—Å—Ç–µ–∫–ª–æ.')
        # –£–¥–∞–ª–∏—Ç—å payment_checking –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        db_handler.del_payment_checking(c.message.chat.id)

        del_user_payment_transactions(c.message.chat.id, c.data)
        return False

@dp.callback_query_handler(lambda c: c.data in keyboards.BALANCE_BUTTONS)
async def prepare_payment(c: types.CallbackQuery):
    try:

        chat_id = c.message.chat.id

        if await get_user(chat_id):
            # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ beats_generating
            if db_handler.get_beats_generating(chat_id) == 0:
                # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ processing
                if db_handler.get_processing(chat_id) == 0:
                    # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å processing –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    db_handler.set_processing(chat_id)

                    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ü–µ–Ω—ã –∏–∑ callback_data
                    price = int(c.data.split('‚ÇΩ')[0])

                    print(users_payment_transactions)

                    if users_payment_transactions.get(chat_id) is not None and c.data in users_payment_transactions[chat_id]:
                        # –£–¥–∞–ª–∏—Ç—å processing –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                        db_handler.del_processing(chat_id)
                        return await bot.answer_callback_query(callback_query_id=c.id, text='‚ö†Ô∏è –í–∞–º —É–∂–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ —ç—Ç—É —Å—É–º–º—É –¥–ª—è –æ–ø–ª–∞—Ç—ã, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ–ø–ª–∞—Ç–∏—Ç–µ –ø–æ –Ω–µ–π.', show_alert=True)
                                
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –æ–ø–ª–∞—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if users_payment_transactions.get(chat_id) is None:
                        users_payment_transactions[chat_id] = []
                    users_payment_transactions[chat_id].append(c.data)

                    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å—á–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                    payment_data = await payment(price, f'–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –Ω–∞ {price}‚ÇΩ')
                    payment_id = payment_data['id']
                    confirmation_url = payment_data['confirmation']['confirmation_url'] 
                    # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∫–Ω–æ–ø–∫–∏
                    btn = types.InlineKeyboardButton(f'–û–ø–ª–∞—Ç–∏—Ç—å {price}‚ÇΩ', url=confirmation_url)
                    # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –∏ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–∞ –Ω–µ–µ –∫–Ω–æ–ø–∫—É
                    keyboard = types.InlineKeyboardMarkup()
                    keyboard.add(btn)
                    await bot.send_message(c.message.chat.id, f'üí≥ –ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Å—Å—ã–ª–∫—É –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º, –æ–ø–ª–∞—Ç–∏—Ç–µ —É–¥–æ–±–Ω—ã–º –≤–∞–º —Å–ø–æ—Å–æ–±–æ–º.\n\nüíæ –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞ - *{c.message.chat.id}*\n–£—Å–ª—É–≥—É –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç: –ò–ù–ù: 910821614530\n\nüéüÔ∏è –ó–∞–∫–∞–∑—ã–≤–∞—è —É—Å–ª—É–≥—É, –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å –¥–æ–≥–æ–≤–æ—Ä–æ–º –æ—Ñ–µ—Ä—Ç—ã: https://beatmaker.site/offer\n\n‚úâÔ∏è –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞: *tech.beatbot@mail.ru*', reply_markup=keyboard, parse_mode='Markdown')
                    # –£–¥–∞–ª–∏—Ç—å processing –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    db_handler.del_processing(chat_id)
                    await check_payment(payment_id, c)
            else:
                # –û—Ç–ø—Ä–∞–≤–∫–∞ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è
                await bot.answer_callback_query(callback_query_id=c.id, text='‚ö†Ô∏è –¢—ã –Ω–µ –º–æ–∂–µ—à—å –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –≤–æ –≤—Ä–µ–º—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –±–∏—Ç–∞.', show_alert=True)
    except Exception as e:   
        print(repr(e))
        # –£–¥–∞–ª–∏—Ç—å processing –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        db_handler.set_processing(c.message.chat.id) 
@dp.callback_query_handler(lambda c: c.data in keyboards.STYLES_BUTTONS)
async def show_bpm(c: types.CallbackQuery):
    try:
        chat_id = c.message.chat.id
        user_chosen_style = c.data

        if await get_user(chat_id):     
            # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ beats_generating
            if db_handler.get_beats_generating(chat_id) == 0:
                # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ processing
                if db_handler.get_processing(chat_id) == 0:
                    if db_handler.get_chosen_style(chat_id) == '':
                        # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å processing –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                        db_handler.set_processing(chat_id)

                        db_handler.set_chosen_style(chat_id, user_chosen_style)

                        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
                        btn_bpm1 = InlineKeyboardButton(keyboards.BPM_BUTTONS[user_chosen_style][0], callback_data=keyboards.BPM_BUTTONS[user_chosen_style][0])
                        btn_bpm2 = InlineKeyboardButton(keyboards.BPM_BUTTONS[user_chosen_style][1], callback_data=keyboards.BPM_BUTTONS[user_chosen_style][1])
                        btn_bpm3 = InlineKeyboardButton(keyboards.BPM_BUTTONS[user_chosen_style][2], callback_data=keyboards.BPM_BUTTONS[user_chosen_style][2])
                        btn_to_styles = keyboards.btn_to_styles
                        bpm_keyboard = InlineKeyboardMarkup(row_width=3).add(btn_bpm1, btn_bpm2, btn_bpm3, btn_to_styles)
                        
                        await bot.edit_message_text(chat_id=chat_id, message_id=c.message.message_id, text=f'*{c.data}* - –æ—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä! –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ —Ç–µ–º–ø:\n\n*{keyboards.BPM_BUTTONS[user_chosen_style][0]}* - –∑–∞–º–µ–¥–ª–µ–Ω–æ\n*{keyboards.BPM_BUTTONS[user_chosen_style][1]}* - –Ω–æ—Ä–º–∞–ª—å–Ω–æ\n*{keyboards.BPM_BUTTONS[user_chosen_style][2]}* - —É—Å–∫–æ—Ä–µ–Ω–æ', reply_markup=bpm_keyboard, parse_mode='Markdown') 
                        
                        # –£–¥–∞–ª–∏—Ç—å processing –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                        db_handler.del_processing(chat_id)
                    else:
                        await bot.edit_message_text(chat_id=chat_id, message_id=c.message.message_id, text=f'‚ö†Ô∏è –ü–æ—Ö–æ–∂–µ, —á—Ç–æ —Ç—ã —É–∂–µ –≤—ã–±—Ä–∞–ª –¥—Ä—É–≥–æ–π —Å—Ç–∏–ª—å –≤ –¥—Ä—É–≥–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏, –∑–∞–∫–æ–Ω—á–∏ –≤—ã–±–æ—Ä –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Ç–≤–æ–µ–≥–æ –±–∏—Ç–∞ —Ç–∞–º –∂–µ\n\n...–∏–ª–∏ –Ω–∞—á–Ω–∏ –Ω–æ–≤—ã–π –≤—ã–±–æ—Ä –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∑–¥–µ—Å—å üëâ', reply_markup=keyboards.to_styles_keyboard, parse_mode='Markdown')

            else:
                # –û—Ç–ø—Ä–∞–≤–∫–∞ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è
                await bot.answer_callback_query(callback_query_id=c.id, text='‚ö†Ô∏è –¢—ã –Ω–µ –º–æ–∂–µ—à—å –∑–∞–∫–∞–∑–∞—Ç—å –µ—â–µ –æ–¥–∏–Ω –±–∏—Ç –≤–æ –≤—Ä–µ–º—è –æ—Å—É—â–µ—Å—Ç–≤–ª–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –∑–∞–∫–∞–∑–∞.', show_alert=True)

    except Exception as e:
        print(repr(e))
        # –£–¥–∞–ª–∏—Ç—å processing –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        db_handler.set_processing(c.message.chat.id)

@dp.callback_query_handler(lambda c: c.data in list(itertools.chain(*keyboards.BPM_BUTTONS.values())))
async def show_extensions(c: types.CallbackQuery):
    try:
        
        chat_id = c.message.chat.id
        user_chosen_bpm = c.data

        if await get_user(chat_id):     
            # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ beats_generating
            if db_handler.get_beats_generating(chat_id) == 0:
                # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ processing
                if db_handler.get_processing(chat_id) == 0:
                    user_chosen_style = db_handler.get_chosen_style(chat_id)
                    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –µ—Å—Ç—å –ª–∏ –≤ –±–∞–∑–µ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —Å—Ç–∏–ª—å
                    if  user_chosen_style != '':
                        # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å processing –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                        db_handler.set_processing(chat_id)

                        if user_chosen_bpm in keyboards.BPM_BUTTONS[user_chosen_style]:

                            db_handler.set_chosen_bpm(chat_id, user_chosen_bpm)
                            # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
                            await bot.edit_message_text(chat_id=chat_id, message_id=c.message.message_id, text=f'–í –∫–∞–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ —Å–∫–∏–Ω—É—Ç—å —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –±–∏—Ç?\n\n*.wav* - –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∞–º–∏ –¥–ª—è –∑–∞–ø–∏—Å–∏. (–ù–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –Ω–∞ iphone)\n\n*.mp3* - –±–æ–ª–µ–µ –Ω–∏–∑–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ, –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –º–µ–Ω—å—à–µ –≤–µ—Å–∏—Ç, –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π –∑–∞–ø–∏—Å–∏.\n\n–ü–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –Ω–∞—á–Ω—ë—Ç—Å—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –±–∏—Ç–æ–≤', reply_markup=keyboards.extensions_keyboard, parse_mode='Markdown')       
                        else:
                            # –û—Ç–ø—Ä–∞–≤–∫–∞ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è
                            await bot.answer_callback_query(callback_query_id=c.id, text='‚ö†Ô∏è –¢—ã –Ω–µ –º–æ–∂–µ—à—å –≤—ã–±—Ä–∞—Ç—å —ç—Ç–æ—Ç bpm –¥–ª—è —ç—Ç–æ–≥–æ —Å—Ç–∏–ª—è, –≤—ã–±–µ—Ä–∏ –∏–∑ –≤—ã—à–µ–ø—Ä–∏–≤–µ–¥—ë–Ω–Ω—ã—Ö', show_alert=True)
                        # –£–¥–∞–ª–∏—Ç—å processing –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                        db_handler.del_processing(chat_id)
                    else:
                        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
                        await bot.edit_message_text(chat_id=chat_id, message_id=c.message.message_id, text=f'‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å bpm, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤—ã–±–µ—Ä–∏ —Å—Ç–∏–ª—å –µ—â—ë —Ä–∞–∑', reply_markup=keyboards.to_styles_keyboard, parse_mode='Markdown')
            else:
                # –û—Ç–ø—Ä–∞–≤–∫–∞ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è
                await bot.answer_callback_query(callback_query_id=c.id, text='‚ö†Ô∏è –¢—ã –Ω–µ –º–æ–∂–µ—à—å –∑–∞–∫–∞–∑–∞—Ç—å –µ—â–µ –æ–¥–∏–Ω –±–∏—Ç –≤–æ –≤—Ä–µ–º—è –æ—Å—É—â–µ—Å—Ç–≤–ª–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –∑–∞–∫–∞–∑–∞.', show_alert=True)

    except Exception as e:
        print(repr(e))
        # –£–¥–∞–ª–∏—Ç—å processing –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        db_handler.set_processing(c.message.chat.id)

# –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
message_to_edit = {}

async def check_response(chat_id, message_id):
    order_number = 0

    while True:
        beats_files = sorted(glob(f'output_beats/{chat_id}_[1-{beats}].*'))
        beats_shorts_files = sorted(glob(f'output_beats/{chat_id}_[1-{beats}]_short.*'))
        
        print(beats_shorts_files)
        if len(beats_files)==beats and len(beats_shorts_files)==beats:
            return True
        
        new_order_number = db_handler.get_query_by_chat_id(chat_id)
        if new_order_number != order_number:
            order_number = new_order_number
            await bot.edit_message_text(chat_id=chat_id, message_id=message_id, text=f'üíΩ –°–æ–∑–¥–∞—é –≤–µ—Ä—Å–∏–∏ –±–∏—Ç–æ–≤, —ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç...\n\n–¢–≤–æ—ë –º–µ—Å—Ç–æ –≤ –æ—á–µ—Ä–µ–¥–∏: *{order_number}*\n\nüîΩ–í–µ—Ä—Å–∏–∏ –ø–æ—è–≤—è—Ç—Å—è –≤–Ω–∏–∑—ÉüîΩ', parse_mode='Markdown')  

        await asyncio.sleep(2*order_number)
            
@dp.callback_query_handler(lambda c: c.data in keyboards.EXTENSIONS_BUTTONS)
async def make_query(c: types.CallbackQuery):
    try:
        chat_id = c.message.chat.id
        user_chosen_extension = c.data

        if await get_user(chat_id):     
            # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ beats_generating
            if db_handler.get_beats_generating(chat_id) == 0:
                # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ processing
                if db_handler.get_processing(chat_id) == 0:
                    # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å processing –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    db_handler.set_processing(chat_id)

                    user_chosen_style = db_handler.get_chosen_style(chat_id)
                    user_chosen_bpm = db_handler.get_chosen_bpm(chat_id)

                    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –µ—Å—Ç—å –ª–∏ –≤ –±–∞–∑–µ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º style –∏ bpm
                    if db_handler.get_balance(chat_id) >= beat_price:
                        if  user_chosen_style != '' and user_chosen_bpm != '':
                            
                            # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å processing –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                            db_handler.set_chosen_extension(chat_id, user_chosen_extension)

                            # –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ beats_generating
                            db_handler.set_beats_generating(chat_id)

                            message = await bot.edit_message_text(chat_id=c.message.chat.id, message_id=c.message.message_id, text='üíΩ –°–æ–∑–¥–∞—é –≤–µ—Ä—Å–∏–∏ –±–∏—Ç–æ–≤, —ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç...\n\nüîΩ–í–µ—Ä—Å–∏–∏ –ø–æ—è–≤—è—Ç—Å—è –≤–Ω–∏–∑—ÉüîΩ')
                            message_to_edit[chat_id] = message.message_id

                            # –£–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª—ã
                            for file in glob(f'output_beats/{chat_id}_[1-{beats}]*.*'):
                                remove(file)
                                                        
                            # –î–æ–±–∞–≤–∏—Ç—å –≤ –æ—á–µ—Ä–µ–¥—å 
                            db_handler.set_query(chat_id, db_handler.get_chosen_style(chat_id), db_handler.get_chosen_bpm(chat_id), db_handler.get_chosen_extension(chat_id).split('.')[-1])
                            
                            if await check_response(chat_id, message_to_edit[chat_id]):
                                files_list = sorted(glob(f'output_beats/{chat_id}_[1-{beats}]_short.*'))

                                messages_ids = []

                                await bot.delete_message(chat_id=chat_id, message_id=c.message.message_id)

                                message = await bot.send_message(chat_id=chat_id, text=f'‚úÖ –í–æ—Ç 3 –¥–µ–º–æ-–≤–µ—Ä—Å–∏–∏ –±–∏—Ç–æ–≤, –≤—ã–±–µ—Ä–∏ —Ç—É, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å, –∏ —è —Å–∫–∏–Ω—É –ø–æ–ª–Ω—É—é –≤–µ—Ä—Å–∏—é:\n\n–°—Ç–∏–ª—å - *{user_chosen_style}* –¢–µ–º–ø - *{user_chosen_bpm}*', parse_mode='Markdown')
                                message_to_edit[chat_id] = message.message_id

                                for file_path in files_list:
                                    with open(file_path, 'rb') as trimmed_sound:
                                        if files_list.index(file_path) == len(files_list)-1:
                                            message = await bot.send_audio(c.message.chat.id, trimmed_sound, reply_markup=keyboards.beats_keyboard)
                                            messages_ids.append(message.message_id)
                                            db_handler.set_beats_versions_messages_ids(c.message.chat.id, ', '.join(str(messages_id) for messages_id in messages_ids))
                                            trimmed_sound.close()
                                            for file in files_list:         
                                                remove(file)
                                            del messages_ids
                                            
                                        else:
                                            message = await bot.send_audio(c.message.chat.id, trimmed_sound)
                                            messages_ids.append(message.message_id)
                                # –£–¥–∞–ª–∏—Ç—å processing –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                                db_handler.del_processing(chat_id)
                        else:
                            # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
                            await bot.edit_message_text(chat_id=chat_id, message_id=c.message.message_id, text=f'‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ, –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑. –í—ã–±—Ä–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –±–∏—Ç–∞ –Ω—É–∂–Ω–æ —Å—Ç—Ä–æ–≥–æ –≤ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º–æ–º –±–æ—Ç–æ–º –ø–æ—Ä—è–¥–∫–µ –∏ –≤ –æ–¥–Ω–æ–º –æ–∫–Ω–µ', reply_markup=keyboards.to_styles_keyboard, parse_mode='Markdown')
                    else:
                        balance_keyboard = InlineKeyboardMarkup().add(keyboards.btn_balance)
                        await bot.edit_message_text(chat_id=chat_id, message_id=c.message.message_id, text=f'‚ö†Ô∏è –°–ø–µ—Ä–≤–∞ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å', reply_markup=balance_keyboard, parse_mode='Markdown')

                # –£–¥–∞–ª–∏—Ç—å processing –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                db_handler.del_processing(chat_id)
            else:
                # –û—Ç–ø—Ä–∞–≤–∫–∞ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è
                await bot.answer_callback_query(callback_query_id=c.id, text='‚ö†Ô∏è –¢—ã –Ω–µ –º–æ–∂–µ—à—å –∑–∞–∫–∞–∑–∞—Ç—å –µ—â–µ –æ–¥–∏–Ω –±–∏—Ç –≤–æ –≤—Ä–µ–º—è –æ—Å—É—â–µ—Å—Ç–≤–ª–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –∑–∞–∫–∞–∑–∞.', show_alert=True)

    except Exception as e:
        print(repr(e))
        # –£–¥–∞–ª–∏—Ç—å processing –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        db_handler.del_processing(c.message.chat.id)
        # –£–¥–∞–ª–∏—Ç—å beats_generating –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        db_handler.del_beats_generating(c.message.chat.id)
        # –£–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª—ã 
        for file in glob(f'output_beats/{c.message.chat.id}_[1-{beats}]*.*'):
            remove(file)
            
        await bot.edit_message_text(chat_id=c.message.chat.id, message_id=c.message.message_id, text=f'‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –±–∏—Ç, –¥–µ–Ω—å–≥–∏ –∑–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –Ω–µ —Å–Ω—è—Ç—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.', reply_markup=keyboards.undo_keyboard)

@dp.callback_query_handler(lambda c: c.data in keyboards.BEATS_BUTTONS)
async def send_beat(c: types.CallbackQuery):
    try:  
        chat_id = c.message.chat.id
        pressed_button = c.data

        if await get_user(chat_id):
            
            # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ processing
            if db_handler.get_processing(chat_id) == 0:
                # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å processing –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                db_handler.set_processing(chat_id)

                message = await bot.edit_message_text(chat_id=chat_id, message_id=message_to_edit[chat_id], text='üì§ –°–∫–∏–¥—ã–≤–∞—é –ø–æ–ª–Ω—É—é –≤–µ—Ä—Å–∏—é... üì§')
                message_to_edit[chat_id] = message.message_id

                # –£–¥–∞–ª–∏—Ç—å –ø—Ä–∏–º–µ—Ä—ã –±–∏—Ç–æ–≤
                messages_to_delete_ids = db_handler.get_beats_versions_messages_ids(chat_id)
                if messages_to_delete_ids != '':
                    for mes_id in messages_to_delete_ids.split(', '):
                        await bot.delete_message(chat_id, mes_id)
                db_handler.del_beats_versions_messages_ids(chat_id)

                # –û—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª
                beat = open(f'output_beats/{chat_id}_{pressed_button}.{db_handler.get_chosen_extension(chat_id).split(".")[-1]}', 'rb')

                # –°–∫–∏–Ω—É—Ç—å —Ñ–∞–π–ª
                await bot.send_audio(chat_id, beat)
                
                # –ó–∞–∫—Ä—ã—Ç—å —Ñ–∞–π–ª
                beat.close()
        
                # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
                message = await bot.edit_message_text(chat_id=chat_id, message_id=message_to_edit[chat_id], text='üîΩ –î–µ—Ä–∂–∏ üîΩ')
                message_to_edit[chat_id] = message.message_id
                await bot.send_message(chat_id, f'–° —Ç–≤–æ–µ–≥–æ –±–∞–ª–∞–Ω—Å–∞ —Å–Ω—è—Ç–æ *{beat_price}‚ÇΩ*\n–ù–∞–¥–µ—é—Å—å, —Ç–µ–±–µ –ø–æ–Ω—Ä–∞–≤–∏—Ç—Å—è –±–∏—Ç üòâ', reply_markup=keyboards.to_menu_keyboard, parse_mode='Markdown')                        
                
                # –£–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª—ã
                for file in glob(f'output_beats/{chat_id}_[1-{beats}]*.*'):
                    remove(file)

                # –°–Ω—è—Ç—å –¥–µ–Ω—å–≥–∏
                db_handler.pay(chat_id, beat_price)

                # –£–≤–µ–ª–∏—á–µ—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—É–ø–ª–µ–Ω—ã—Ö –±–∏—Ç–æ–≤ –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç–µ
                db_handler.get_beat(chat_id)
                                
                # –û–±–Ω—É–ª–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –±–∏—Ç–∞
                await reset_chosen_params(chat_id)
                # –£–¥–∞–ª–∏—Ç—å processing –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                db_handler.del_processing(chat_id)
                # –£–¥–∞–ª–∏—Ç—å beats_generating –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                db_handler.del_beats_generating(chat_id)
                # –£–¥–∞–ª–∏—Ç—å chosen_extension –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                db_handler.del_chosen_extension(chat_id)

    except Exception as e:
        print(repr(e))
        # –û–±–Ω—É–ª–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –±–∏—Ç–∞
        await reset_chosen_params(c.message.chat.id)
        # –£–¥–∞–ª–∏—Ç—å processing –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        db_handler.del_processing(c.message.chat.id)
        # –£–¥–∞–ª–∏—Ç—å beats_generating –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        db_handler.del_beats_generating(c.message.chat.id)
        # –£–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª—ã
        for file in glob(f'output_beats/{c.message.chat.id}_[1-{beats}].*'):
            remove(file)
            
        await bot.send_message(c.message.chat.id, '‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –±–∏—Ç, –¥–µ–Ω—å–≥–∏ –∑–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –Ω–µ —Å–Ω—è—Ç—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.', reply_markup=keyboards.undo_keyboard)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    executor.start(dp, safe_launch())
    executor.start_polling(dp, skip_updates=True)